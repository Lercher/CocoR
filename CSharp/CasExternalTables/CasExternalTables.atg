// note that we don't have a byte order mark here (visual studio code), 
// so we need to use Coco's command line switch -utf8:
// ..\coco CasExternalTables.ATG -frames .. -utf8
// cls & cd .. & build.bat & cd CasExternalTables & cocbuild

COMPILER CasExternalTables

IGNORECASE


CHARACTERS
    ucletter  = 'A'..'Z'.
    lcletter  = 'a'..'z'.
    umlaut    = "ÄÖÜäöüß".
	letter    = ucletter + lcletter + umlaut + '_'.
    digit     = '0'..'9'. 
	cr        = '\r'.
	lf        = '\n'.
	tab       = '\t'.
    quote     = '\''.
    star      = '*'.
	stringCh  = ANY - quote - cr - lf.

TOKENS
    number = ['-'] digit { digit }.
	ident = letter { letter }.
    set : ident = "set".
    serveroutput : ident = "serveroutput".
    on : ident = "on".
    size : ident = "size".
    insert : ident = "insert".
    update : ident = "update".
    delete : ident = "delete".
    into : ident = "into".
    values: ident = "values".    
    prompt : ident = "prompt". 
    null : ident = "null".
    lantusparam : ident = "LANTUSPARAM".
    tusparam : ident = "TUSPARAM".
    tusnom : ident = "TUSNOM".    
    tupcode : ident = "TUPCODE".
    tupflagorfi : ident = "TUPFLAGORFI".
    tuplibelle : ident = "TUPLIBELLE".
    sc = ";".
    openparen = "(".
    closeparen = ")".
    slash = "/".
    dot = ".".
    comma = ",".
    equals = "=".
    doublebar = "||".
	string = quote { stringCh | [cr] lf | quote quote } quote.
    stars = star { star }.
    

COMMENTS FROM "/*" TO "*/" NESTED
COMMENTS FROM "--" TO lf

IGNORE cr + lf + tab


SYMBOLTABLES
   languages STRICT "'EN'" "'FR'". 
   deletabletables STRICT "LANTUSPARAM" "TUSPARAM" "LKTUPTACTPG".
   updatetables STRICT "TUSPARAM" "LANTUSPARAM".
   columns STRICT "TUSNOM" "TUPCODE" "TUPFLAGORFI".
   chrarguments STRICT "38".


PRODUCTIONS

    CasExternalTables =
        [ StarPrompt slash ]
        SetServeroutput
        slash
        { Block }
        EOF
        .

    Block =
        ( ExceptionHandledBlock
        | StarPrompt
        | DeclareBlock
        )
        { slash }
        .

    DeclareBlock = 
        "declare"       (. SemErr("Mysterious DECLARE block detected"); .)
        { ANY }
        slash
        .

    ExceptionHandledBlock =
        [ "set" "serveroutput" "on" sc]
        "begin"
            InsertDeleteUpdate { InsertDeleteUpdate }
            ( "commit" sc
            | (. SemErr("COMMIT in ExceptionHandledBlock missing"); .)
            )
            ( PutLine 
            | (. SemErr("COMMIT without dbms_output.PUT_LINE"); .)
            )
        "exception" "when" "others" "then"
            [ PutLine ]
            ( "rollback"
            | null
            ) 
            sc
            [ PutLine ]   
        "end" sc
        slash
        .
    
    InsertDeleteUpdate = 
        ( Insert
        | Delete
        | Update
        )
        .

    // UPDATE TUSPARAM SET TUPFLAGORFI = 1 WHERE TUSNOM = 'GENREHABSTATUS'AND TUPCODE = '05';
    // UPDATE TUSPARAM SET TUPFLAGORFI = TUPCODE WHERE TUSNOM = 'APTSTATUS';
    // UPDATE LANTUSPARAM SET TUPCODE = 'NEW' WHERE TUSNOM='INUPDMODE' AND TUPCODE = 'NEW ';
    Update =
        update
        ident:updatetables
        "set" ident:columns equals (number | string | ident:columns )
        "where"
        ident:columns equals String
        { "and" ANY { ANY } }
        sc
        .

    // DELETE FROM LANTUSPARAM WHERE TUSNOM = 'DEFAULTBVE';
    // DELETE FROM LKTUPTACTPG WHERE TUSNOM = 'PENALITE_RACHAT'
    //    AND TUPCODE NOT IN('REFINOMINAL', 'FORFAIT')
    //    AND TUPCODE NOT LIKE('ACT%')
    //    AND TUPCODE NOT LIKE('PCT%') ;
    Delete =
        delete "from"
        ident:deletabletables
        "where"
        ident:columns
        "="
        String
        { "and" ANY { ANY }}
        sc
        .

    Insert =
        "insert" "into"
        ( TUSER       | LANTUSER
        | TUSPARAM    | LANTUSPARAM
        | TTRPARAM    | LANTTRPARAM
        | TTRAITEMENT | LANTTRAITEMENT
        )
        .

    // 	INSERT INTO TTRPARAM ( TTRNOM, TTPCODE ) VALUES ('IMPUTANAFILTRE','REVPLAN');
    TTRPARAM =
        "TTRPARAM"   (. SemErr("Suspicious insert into TTRPARAM"); .)
        openparen
            "TTRNOM"
            comma "TTPCODE"
        closeparen
        values
        openparen
            String
            comma String
        closeparen
        sc
        .

    // 	INSERT INTO LANTTRPARAM ( TTRNOM, TTPCODE, LANCODE, TTPLIBELLE )
	//  VALUES ('IMPUTANAFILTRE','REVPLAN', 'EN','Revolving instalment plan');
    // 	INSERT INTO LANTTRPARAM (TTRNOM,TTPCODE,LANCODE,TTPLIBELLE,TTPHELPTEXT) VALUES ('GENDERTYPE','M','EN','Male',NULL);
    //  INSERT INTO LANTTRPARAM (TTRNOM, TTPCODE, TTPLIBELLE, LANCODE) VALUES ('SCENARIO', 'EVBAIL_RENOUV', 'Renouvellement', 'FR') ;

    LANTTRPARAM =
        "LANTTRPARAM"   (. SemErr("Suspicious insert into LANTTRPARAM"); .)
        openparen
            "TTRNOM"
            comma "TTPCODE"
            comma 
            ( LANTTRPARAM_LANCODE | LANTTRPARAM_TTPLIBELLE )
            ( comma 
                (String
                | null (. SemErr("LANTTRPARAM without Helptext (null)"); .)
                )
            | (. SemErr("LANTTRPARAM without Helptext (column missing)"); .)
            )
        closeparen
        sc
        .
    
    LANTTRPARAM_LANCODE = 
            "LANCODE"
            comma "TTPLIBELLE"
            [ comma "TTPHELPTEXT" ]
        closeparen
        values
        openparen
            String
            comma String
            comma string:languages
            comma String
        .

    LANTTRPARAM_TTPLIBELLE = 
            "TTPLIBELLE"
            comma "LANCODE"
            [ comma "TTPHELPTEXT" ]
        closeparen
        values
        openparen
            String
            comma String
            comma String
            comma string:languages
        .

    //	INSERT INTO TTRAITEMENT ( TTRNOM, TTRFLAGPREF ) VALUES ('REVTRANSDEST',1);
    TTRAITEMENT =
        "TTRAITEMENT"   (. SemErr("Suspicious insert into TTRAITEMENT"); .)
        openparen
            "TTRNOM"
            comma "TTRFLAGPREF"
        closeparen
        values
        openparen
            String
            comma number
        closeparen
        sc
        .


	// INSERT INTO LANTTRAITEMENT ( TTRNOM, LANCODE, TTRLIBELLE, TTRCONTEXT )
	// VALUES ('REVTRANSDEST', 'EN', 'Revolving transfer destination', 'Revolving');
    // INSERT INTO LANTTRAITEMENT (TTRNOM, TTRLIBELLE, TTRCONTEXT, LANCODE) VALUES
    // ('SCENARIO', 'Scénario de lot', 'Bail', 'FR') ;

    LANTTRAITEMENT =
        "LANTTRAITEMENT"   (. SemErr("Suspicious insert into LANTTRAITEMENT"); .)
        openparen
            "TTRNOM"
            comma
            ( LANTTRAITEMENT_LANCODE
            | LANTTRAITEMENT_TTRLIBELLE
            )
        sc
        .

    LANTTRAITEMENT_LANCODE =
            "LANCODE"
            comma "TTRLIBELLE"
            comma "TTRCONTEXT"
        closeparen
        values
        openparen
            String
            comma string:languages
            comma String
            comma String
        closeparen
        .

    LANTTRAITEMENT_TTRLIBELLE =
            "TTRLIBELLE"
            comma "TTRCONTEXT"
            comma "LANCODE"
        closeparen
        values
        openparen
            String
            comma String
            comma String
            comma string:languages
        closeparen
        .


    TUSER = 
        "TUSER" 
        (openparen 
            tusnom comma 
            "TUSLONGUEUR"
        closeparen
        |  (. SemErr("Insert into TUSER without column list");  .)
        )
        values
        openparen
            String comma
            ( number // OK
            | null      (. SemErr(t.val + " as TUSLONGUEUR (a length) is invalid"); .)
            | string    (. SemErr(t.val + " (string) as TUSLONGUEUR (a length) is invalid"); .)
            )
        closeparen
        sc
        .

    LANTUSER = 
        "LANTUSER"
        (
            openparen 
                tusnom comma 
                ( LANTUSER_LANCODE
                | LANTUSER_TUSLIBELLE
                )
        | 
            values 
            openparen
                String         (. SemErr("INSERT INTO LANTUSER without column list: " + t.val); .) 
                comma String
                comma String 
            closeparen
            sc
        ) 
        .

    LANTUSER_LANCODE =
            "LANCODE" comma
            "TUSLIBELLE"
        closeparen
        values
        openparen
            String comma
            string:languages comma
            String
        closeparen
        sc
        .

    LANTUSER_TUSLIBELLE =
            "TUSLIBELLE" comma
            "LANCODE"
        closeparen
        values
        openparen
            String comma
            String comma
            string:languages
        closeparen
        sc
        .


    TUSPARAM = 
        tusparam 
        (
        openparen 
            tusnom 
            comma tupcode
            [ comma tupflagorfi ]
        closeparen
        |  (. SemErr("INSERT INTO TUSPARAM without column list"); .)
        )
        values
        openparen
            String 
            comma String 
            [ 
            comma 
            ( number 
            | null 
            | string  (. SemErr("TUPFLAGORFI (a number) is assigned the string " + t.val); .)
            ) 
            ]
        closeparen
        sc
        .

    LANTUSPARAM = 
        lantusparam
        (        
            openparen 
                tusnom comma 
                tupcode comma
                ( LANTUSPARAM_LANCODE
                | LANTUSPARAM_TUPLIBELLE
                )
        |
            values
            openparen
                String          (. SemErr("INSERT INTO LANTUSPARAM without column list: " + t.val); .) 
                comma String
                comma string:languages 
                comma String 
                comma (String | null)
            closeparen
            sc
        )
        .

    LANTUSPARAM_LANCODE =
            "LANCODE" comma
            tuplibelle
            [ comma "TUPHELPTEXT" ]
        closeparen
        values
        openparen
            String comma
            String comma
            string:languages comma
            String
            [ comma (String | null) ]
        closeparen
        sc
        .

    LANTUSPARAM_TUPLIBELLE =
            "TUPLIBELLE" comma
            "LANCODE"
        closeparen
        values
        openparen
            String comma
            String comma
            String comma
            string:languages
        closeparen
        sc
        .

// ---------------------------------------------------------

    PutLine =
        "dbms_output" dot "PUT_LINE"
        openparen 
            UncheckedString
        closeparen
        sc
        .

    String =
        StringFactor 
        (. 
            if (t.kind == _string && t.val.StartsWith("' ")) {
                SemErr("First string literal starts with a space: " + t.val);
            }
        .)
        { doublebar StringFactor }
        (. 
            if (t.kind == _string && t.val.EndsWith(" '")) {
                SemErr("Last string literal ends with a space: " + t.val);
            }
        .)
        .

    UncheckedString =
        StringFactor 
        { doublebar StringFactor }
        .

    StringFactor
    =
        string        
            (.  if (t.val.Contains("\n"))
                    SemErr("Illegal line break in string literal");
            .)
        | "chr" openparen number:chrarguments closeparen
        | "SQLERRM"
        .

    SetServeroutput =
        set serveroutput on size number
        sc
        .

    StarPrompt =
        prompt stars { ANY } stars
        .

END CasExternalTables.
